"""Initial migration

Revision ID: 49a43d4d7f00
Revises: 
Create Date: 2024-12-18 10:15:06.717771

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '49a43d4d7f00'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_code', sa.String(length=64), nullable=True),
    sa.Column('school_name', sa.String(length=128), nullable=True),
    sa.Column('grade_name', sa.String(length=64), nullable=True),
    sa.Column('class_name', sa.String(length=64), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('student_id', sa.String(length=20), nullable=True),
    sa.Column('exam_type', sa.String(length=64), nullable=True),
    sa.Column('exam_type1', sa.String(length=64), nullable=True),
    sa.Column('exam_no', sa.String(length=64), nullable=True),
    sa.Column('subject_type', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exam_no')
    )
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_student_school_code'), ['school_code'], unique=False)

    op.create_table('teacher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('school_name', sa.String(length=128), nullable=False),
    sa.Column('teaching_grade', sa.String(length=10), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('subjects', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('school_code', sa.String(length=64), nullable=True),
    sa.Column('school_name', sa.String(length=64), nullable=True),
    sa.Column('grade_name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_school_code'), ['school_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_school_code'))

    op.drop_table('user')
    op.drop_table('teacher')
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_student_school_code'))

    op.drop_table('student')
    # ### end Alembic commands ###
